generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Notification system enums
enum NotificationType {
  PARKING_SESSION_STARTED
  PARKING_SESSION_ENDED
  PAYMENT_CONFIRMATION
  PAYMENT_SUCCESSFUL
  PAYMENT_FAILED
  ACCOUNT_CREATED
  EMAIL_VERIFICATION
  PASSWORD_RESET
  PASSWORD_CHANGED
  LOGIN_SECURITY_ALERT
  SECURITY_ALERT
  ACCOUNT_LOCKED
  SPOT_AVAILABILITY
  SPOT_AVAILABLE
  RESERVATION_REMINDER
  RESERVATION_CONFIRMED
  MAINTENANCE_ALERT
  SYSTEM_ANNOUNCEMENT
  BILLING_REMINDER
  SUBSCRIPTION_EXPIRY
  PROMOTION_OFFER
  OVERTIME_WARNING
}

enum NotificationChannel {
  EMAIL
  SMS
  IN_APP
  PUSH
}

enum NotificationStatus {
  PENDING
  SENT
  DELIVERED
  READ
  FAILED
  EXPIRED
}

enum NotificationPriority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

enum NotificationFrequency {
  IMMEDIATE
  HOURLY
  DAILY
  WEEKLY
}

model demand_forecasts {
  id                String   @id
  hour              Int
  dayOfWeek         Int
  expectedOccupancy Float
  surgeMultiplier   Float    @default(1.0)
  confidence        Float
  spotType          String?
  garageId          String?
  isActive          Boolean  @default(true)
  lastUpdated       DateTime @default(now())
  createdAt         DateTime @default(now())
  updatedAt         DateTime
  garages           garages? @relation(fields: [garageId], references: [id])

  @@unique([hour, dayOfWeek, spotType, garageId])
  @@index([expectedOccupancy])
  @@index([isActive])
  @@index([garageId])
  @@index([spotType])
  @@index([hour, dayOfWeek])
}

model discount_codes {
  id                  String            @id
  code                String            @unique
  name                String?
  description         String?
  type                String
  value               Float
  minAmount           Float?
  maxDiscount         Float?
  usageLimit          Int?
  usedCount           Int               @default(0)
  perUserLimit        Int?
  validFrom           DateTime
  validUntil          DateTime
  isActive            Boolean           @default(true)
  applicableSpotTypes String?
  membershipTiersOnly String?
  garageId            String?
  createdBy           String?
  metadata            String?
  createdAt           DateTime          @default(now())
  updatedAt           DateTime
  users               users?            @relation(fields: [createdBy], references: [id])
  garages             garages?          @relation(fields: [garageId], references: [id])
  discount_usage      discount_usage[]
  pricing_history     pricing_history[]

  @@index([usedCount, usageLimit])
  @@index([garageId])
  @@index([type])
  @@index([validFrom, validUntil])
  @@index([isActive])
  @@index([code])
}

model discount_usage {
  id               String            @id
  discountCodeId   String
  userId           String?
  sessionId        String?
  vehicleId        String?
  spotId           String?
  originalAmount   Float
  discountAmount   Float
  finalAmount      Float
  ipAddress        String?
  userAgent        String?
  metadata         String?
  usedAt           DateTime          @default(now())
  parking_spots    parking_spots?    @relation(fields: [spotId], references: [id])
  vehicles         vehicles?         @relation(fields: [vehicleId], references: [id])
  parking_sessions parking_sessions? @relation(fields: [sessionId], references: [id])
  users            users?            @relation(fields: [userId], references: [id])
  discount_codes   discount_codes    @relation(fields: [discountCodeId], references: [id], onDelete: Cascade)

  @@index([discountCodeId, userId])
  @@index([usedAt])
  @@index([sessionId])
  @@index([userId])
  @@index([discountCodeId])
}

model email_templates {
  id          String   @id
  name        String   @unique
  subject     String
  htmlContent String
  textContent String
  variables   String?
  isActive    Boolean  @default(true)
  language    String   @default("en")
  version     Int      @default(1)
  createdAt   DateTime @default(now())
  updatedAt   DateTime

  @@index([language])
  @@index([isActive])
  @@index([name])
}

model floors {
  id            String          @id
  garageId      String
  floorNumber   Int
  description   String?
  totalSpots    Int             @default(0)
  isActive      Boolean         @default(true)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime
  garages       garages         @relation(fields: [garageId], references: [id], onDelete: Cascade)
  parking_spots parking_spots[]

  @@unique([garageId, floorNumber])
}

model garages {
  id               String             @id
  name             String             @unique
  description      String?
  totalFloors      Int                @default(1)
  totalSpots       Int                @default(0)
  isActive         Boolean            @default(true)
  operatingHours   String?
  createdAt        DateTime           @default(now())
  updatedAt        DateTime
  demand_forecasts demand_forecasts[]
  discount_codes   discount_codes[]
  floors           floors[]
  pricing_history  pricing_history[]
  pricing_rules    pricing_rules[]
  promotions       promotions[]
  surge_zones      surge_zones[]
  tickets          tickets[]
  transactions     transactions[]
}

model login_history {
  id            String        @id
  userId        String
  deviceId      String?
  attemptType   String
  ipAddress     String
  geoLocation   String?
  userAgent     String?
  failureReason String?
  isSuspicious  Boolean       @default(false)
  riskScore     Float?
  metadata      String?
  createdAt     DateTime      @default(now())
  user_devices  user_devices? @relation(fields: [deviceId], references: [id])
  users         users         @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([attemptType, createdAt])
  @@index([ipAddress, createdAt])
  @@index([userId, createdAt])
  @@index([createdAt])
  @@index([isSuspicious])
  @@index([ipAddress])
  @@index([attemptType])
  @@index([userId])
}

model membership_benefits {
  id                  String   @id
  tier                String   @unique
  name                String
  description         String?
  discountPercent     Float    @default(0)
  priorityBooking     Boolean  @default(false)
  extendedGracePeriod Int      @default(5)
  freeHours           Float    @default(0)
  specialRates        String?
  features            String?
  maxReservations     Int?
  advanceBookingDays  Int?
  isActive            Boolean  @default(true)
  sortOrder           Int      @default(0)
  createdAt           DateTime @default(now())
  updatedAt           DateTime

  @@index([sortOrder])
  @@index([isActive])
  @@index([tier])
}

model notification_logs {
  id             String        @id
  notificationId String
  status         String
  timestamp      DateTime      @default(now())
  details        String?
  error          String?
  retryAttempt   Int?
  processingTime Int?
  externalId     String?
  metadata       String?
  notifications  notifications @relation(fields: [notificationId], references: [id], onDelete: Cascade)

  @@index([retryAttempt, timestamp])
  @@index([status, timestamp])
  @@index([notificationId, timestamp])
  @@index([timestamp])
  @@index([status])
  @@index([notificationId])
}

model notification_preferences {
  id                String               @id
  userId            String
  channel           NotificationChannel
  enabled           Boolean              @default(true)
  quietHoursStart   String?
  quietHoursEnd     String?
  timezone          String               @default("UTC")
  frequency         NotificationFrequency @default(IMMEDIATE)
  categories        String?
  metadata          String?
  doNotDisturbUntil DateTime?
  createdAt         DateTime             @default(now())
  updatedAt         DateTime
  users             users                @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, channel])
  @@index([userId, channel, enabled])
  @@index([userId, enabled])
  @@index([frequency])
  @@index([enabled])
  @@index([channel])
  @@index([userId])
}

model notification_templates {
  id            String              @id
  name          String              @unique
  type          NotificationType
  channel       NotificationChannel
  subject       String
  body          String
  variables     String?
  isActive      Boolean             @default(true)
  language      String              @default("en")
  version       Int                 @default(1)
  description   String?
  createdAt     DateTime            @default(now())
  updatedAt     DateTime
  notifications notifications[]

  @@index([isActive, type, channel])
  @@index([type, channel, language])
  @@index([type, channel])
  @@index([language])
  @@index([isActive])
  @@index([channel])
  @@index([type])
  @@index([name])
}

model notifications {
  id                     String                  @id
  userId                 String
  type                   NotificationType
  channel                NotificationChannel
  status                 NotificationStatus      @default(PENDING)
  priority               NotificationPriority    @default(MEDIUM)
  subject                String
  content                String
  metadata               String?
  readAt                 DateTime?
  sentAt                 DateTime?
  deliveredAt            DateTime?
  failedAt               DateTime?
  errorMessage           String?
  retryCount             Int                     @default(0)
  maxRetries             Int                     @default(3)
  scheduleAt             DateTime?
  expiresAt              DateTime?
  templateId             String?
  createdAt              DateTime                @default(now())
  updatedAt              DateTime
  notification_logs      notification_logs[]
  notification_templates notification_templates? @relation(fields: [templateId], references: [id])
  users                  users                   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([channel, priority, status])
  @@index([scheduleAt, status])
  @@index([status, retryCount])
  @@index([type, channel])
  @@index([userId, channel])
  @@index([userId, status])
  @@index([expiresAt])
  @@index([scheduleAt])
  @@index([sentAt])
  @@index([createdAt])
  @@index([priority])
  @@index([status])
  @@index([channel])
  @@index([type])
  @@index([userId])
}

model parking_sessions {
  id              String            @id
  vehicleId       String
  spotId          String
  startTime       DateTime          @default(now())
  endTime         DateTime?
  duration        Int?
  hourlyRate      Float             @default(5.0)
  totalAmount     Float             @default(0.0)
  amountPaid      Float             @default(0.0)
  isPaid          Boolean           @default(false)
  paymentMethod   String?
  paymentTime     DateTime?
  status          String            @default("ACTIVE")
  notes           String?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime
  discount_usage  discount_usage[]
  parking_spots   parking_spots     @relation(fields: [spotId], references: [id])
  vehicles        vehicles          @relation(fields: [vehicleId], references: [id], onDelete: Cascade)
  payments        payments[]
  pricing_history pricing_history[]
  promotion_usage promotion_usage[]

  @@index([paymentTime, totalAmount])
  @@index([spotId, startTime])
  @@index([vehicleId, startTime])
  @@index([status, isPaid])
  @@index([startTime, endTime])
  @@index([paymentTime])
  @@index([isPaid])
  @@index([status])
  @@index([endTime])
  @@index([startTime])
  @@index([spotId])
  @@index([vehicleId])
}

model parking_spots {
  id                                             String             @id
  spotNumber                                     String             @unique
  floorId                                        String
  level                                          Int
  section                                        String?
  spotType                                       String             @default("STANDARD")
  status                                         String             @default("AVAILABLE")
  isActive                                       Boolean            @default(true)
  width                                          Float?
  length                                         Float?
  height                                         Float?
  createdAt                                      DateTime           @default(now())
  updatedAt                                      DateTime
  discount_usage                                 discount_usage[]
  parking_sessions                               parking_sessions[]
  floors                                         floors             @relation(fields: [floorId], references: [id], onDelete: Cascade)
  pricing_history                                pricing_history[]
  promotion_usage                                promotion_usage[]
  vehicles_vehicles_currentSpotIdToparking_spots vehicles[]         @relation("vehicles_currentSpotIdToparking_spots")
  vehicles_vehicles_spotIdToparking_spots        vehicles[]         @relation("vehicles_spotIdToparking_spots")

  @@index([spotType, isActive])
  @@index([level, section])
  @@index([status, spotType])
  @@index([floorId])
  @@index([isActive])
  @@index([level])
  @@index([spotType])
  @@index([status])
  @@index([spotNumber])
}

model payments {
  id               String            @id
  paymentNumber    String            @unique
  sessionId        String?
  vehicleId        String?
  amount           Float
  currency         String            @default("USD")
  paymentType      String            @default("PARKING")
  paymentMethod    String
  status           String            @default("PENDING")
  transactionId    String?
  paymentDate      DateTime          @default(now())
  processedAt      DateTime?
  failureReason    String?
  refundAmount     Float?            @default(0)
  refundedAt       DateTime?
  notes            String?
  deletedAt        DateTime?
  createdAt        DateTime          @default(now())
  updatedAt        DateTime
  vehicles         vehicles?         @relation(fields: [vehicleId], references: [id])
  parking_sessions parking_sessions? @relation(fields: [sessionId], references: [id])

  @@index([createdAt])
  @@index([processedAt])
  @@index([paymentDate])
  @@index([paymentType])
  @@index([status])
  @@index([vehicleId])
  @@index([sessionId])
  @@index([paymentNumber])
}

model pricing_history {
  id                   String            @id
  sessionId            String?
  vehicleId            String?
  spotId               String?
  garageId             String?
  ruleId               String?
  discountCodeId       String?
  promotionId          String?
  surgeZoneId          String?
  baseRate             Float
  surgeMultiplier      Float             @default(1.0)
  surgeRate            Float
  membershipDiscount   Float             @default(0)
  discountCodeDiscount Float             @default(0)
  promotionDiscount    Float             @default(0)
  finalRate            Float
  estimatedAmount      Float?
  actualAmount         Float?
  spotType             String?
  spotFeatures         String?
  rateType             String?
  membershipTier       String?
  duration             Int?
  checkInTime          DateTime
  checkOutTime         DateTime?
  calculationData      String?
  appliedRules         String?
  metadata             String?
  createdAt            DateTime          @default(now())
  surge_zones          surge_zones?      @relation(fields: [surgeZoneId], references: [id])
  promotions           promotions?       @relation(fields: [promotionId], references: [id])
  discount_codes       discount_codes?   @relation(fields: [discountCodeId], references: [id])
  pricing_rules        pricing_rules?    @relation(fields: [ruleId], references: [id])
  garages              garages?          @relation(fields: [garageId], references: [id])
  parking_spots        parking_spots?    @relation(fields: [spotId], references: [id])
  vehicles             vehicles?         @relation(fields: [vehicleId], references: [id])
  parking_sessions     parking_sessions? @relation(fields: [sessionId], references: [id])

  @@index([garageId, checkInTime])
  @@index([checkInTime, spotType])
  @@index([createdAt])
  @@index([discountCodeId])
  @@index([ruleId])
  @@index([membershipTier])
  @@index([spotType])
  @@index([checkInTime])
  @@index([garageId])
  @@index([spotId])
  @@index([vehicleId])
  @@index([sessionId])
}

model pricing_rules {
  id              String            @id
  name            String
  type            String
  description     String?
  conditions      String
  action          String
  priority        Int               @default(0)
  isActive        Boolean           @default(true)
  validFrom       DateTime?
  validUntil      DateTime?
  garageId        String?
  spotTypes       String?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime
  pricing_history pricing_history[]
  garages         garages?          @relation(fields: [garageId], references: [id])

  @@index([garageId, isActive])
  @@index([validFrom, validUntil])
  @@index([priority])
  @@index([isActive])
  @@index([type])
}

model promotion_usage {
  id               String            @id
  promotionId      String
  userId           String?
  sessionId        String?
  vehicleId        String?
  spotId           String?
  savings          Float
  metadata         String?
  usedAt           DateTime          @default(now())
  parking_spots    parking_spots?    @relation(fields: [spotId], references: [id])
  vehicles         vehicles?         @relation(fields: [vehicleId], references: [id])
  parking_sessions parking_sessions? @relation(fields: [sessionId], references: [id])
  users            users?            @relation(fields: [userId], references: [id])
  promotions       promotions        @relation(fields: [promotionId], references: [id], onDelete: Cascade)

  @@index([promotionId, userId])
  @@index([usedAt])
  @@index([sessionId])
  @@index([userId])
  @@index([promotionId])
}

model promotions {
  id              String            @id
  name            String
  description     String?
  type            String
  conditions      String
  discount        String
  startDate       DateTime
  endDate         DateTime
  isActive        Boolean           @default(true)
  priority        Int               @default(0)
  usageLimit      Int?
  usedCount       Int               @default(0)
  perUserLimit    Int?
  garageId        String?
  applicableSpots String?
  targetAudience  String?
  createdBy       String?
  metadata        String?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime
  pricing_history pricing_history[]
  promotion_usage promotion_usage[]
  users           users?            @relation(fields: [createdBy], references: [id])
  garages         garages?          @relation(fields: [garageId], references: [id])

  @@index([usedCount, usageLimit])
  @@index([garageId])
  @@index([priority])
  @@index([type])
  @@index([startDate, endDate])
  @@index([isActive])
}

model security_audit_logs {
  id          String   @id
  userId      String?
  sessionId   String?
  action      String
  category    String
  severity    String
  description String
  ipAddress   String?
  userAgent   String?
  metadata    String?
  riskLevel   String?
  isAnomaly   Boolean  @default(false)
  createdAt   DateTime @default(now())
  users       users?   @relation(fields: [userId], references: [id])

  @@index([severity, createdAt])
  @@index([action, createdAt])
  @@index([userId, createdAt])
  @@index([riskLevel])
  @@index([isAnomaly])
  @@index([createdAt])
  @@index([severity])
  @@index([category])
  @@index([action])
  @@index([userId])
}

model security_settings {
  id                  String   @id
  key                 String   @unique
  value               String
  dataType            String
  category            String
  description         String?
  isEditable          Boolean  @default(true)
  environmentSpecific Boolean  @default(false)
  lastModifiedBy      String?
  createdAt           DateTime @default(now())
  updatedAt           DateTime

  @@index([environmentSpecific])
  @@index([category])
  @@index([key])
}

model surge_zones {
  id                 String            @id
  name               String
  description        String?
  floors             String
  spotTypes          String
  currentMultiplier  Float             @default(1.0)
  maxMultiplier      Float             @default(3.0)
  occupancyThreshold Float             @default(0.8)
  peakHours          String?
  isActive           Boolean           @default(true)
  garageId           String?
  priority           Int               @default(0)
  createdAt          DateTime          @default(now())
  updatedAt          DateTime
  pricing_history    pricing_history[]
  garages            garages?          @relation(fields: [garageId], references: [id])

  @@index([occupancyThreshold])
  @@index([currentMultiplier])
  @@index([garageId])
  @@index([isActive])
}

model tickets {
  id             String         @id
  garageId       String
  ticketNumber   String         @unique
  vehiclePlate   String
  spotNumber     String?
  entryTime      DateTime       @default(now())
  exitTime       DateTime?
  duration       Int?
  baseAmount     Float          @default(0.0)
  additionalFees Float          @default(0.0)
  totalAmount    Float          @default(0.0)
  paidAmount     Float          @default(0.0)
  status         String         @default("ACTIVE")
  paymentStatus  String         @default("UNPAID")
  lostTicketFee  Float          @default(0.0)
  isLostTicket   Boolean        @default(false)
  qrCode         String?
  barcodeData    String?
  notes          String?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime
  garages        garages        @relation(fields: [garageId], references: [id])
  transactions   transactions[]

  @@index([isLostTicket])
  @@index([exitTime])
  @@index([entryTime])
  @@index([paymentStatus])
  @@index([status])
  @@index([vehiclePlate])
  @@index([ticketNumber])
  @@index([garageId])
}

model transactions {
  id               String    @id
  garageId         String
  ticketId         String?
  transactionType  String
  amount           Float
  currency         String    @default("USD")
  status           String
  paymentMethod    String?
  paymentReference String?
  description      String?
  metadata         String?
  processedAt      DateTime?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime
  tickets          tickets?  @relation(fields: [ticketId], references: [id])
  garages          garages   @relation(fields: [garageId], references: [id])

  @@index([processedAt])
  @@index([createdAt])
  @@index([transactionType])
  @@index([status])
  @@index([ticketId])
  @@index([garageId])
}

model user_devices {
  id                   String          @id
  userId               String
  fingerprint          String          @unique
  name                 String?
  deviceType           String
  browser              String?
  operatingSystem      String?
  ipAddress            String?
  geoLocation          String?
  isTrusted            Boolean         @default(false)
  lastSeenAt           DateTime        @default(now())
  firstSeenAt          DateTime        @default(now())
  isActive             Boolean         @default(true)
  notificationSettings String?
  createdAt            DateTime        @default(now())
  updatedAt            DateTime
  login_history        login_history[]
  users                users           @relation(fields: [userId], references: [id], onDelete: Cascade)
  user_sessions        user_sessions[]

  @@index([userId, isActive])
  @@index([lastSeenAt])
  @@index([isActive])
  @@index([isTrusted])
  @@index([fingerprint])
  @@index([userId])
}

model user_sessions {
  id                String        @id
  userId            String
  token             String        @unique
  refreshToken      String?       @unique
  expiresAt         DateTime
  refreshExpiresAt  DateTime?
  isRevoked         Boolean       @default(false)
  deviceInfo        String?
  deviceFingerprint String?
  ipAddress         String?
  geoLocation       String?
  lastActivityAt    DateTime      @default(now())
  sessionType       String        @default("WEB")
  csrfToken         String?
  revokedReason     String?
  revokedAt         DateTime?
  isSecure          Boolean       @default(false)
  createdAt         DateTime      @default(now())
  updatedAt         DateTime
  user_devices      user_devices? @relation(fields: [deviceFingerprint], references: [fingerprint])
  users             users         @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, isRevoked, expiresAt])
  @@index([lastActivityAt])
  @@index([ipAddress])
  @@index([deviceFingerprint])
  @@index([isRevoked])
  @@index([expiresAt])
  @@index([refreshToken])
  @@index([token])
  @@index([userId])
}

model users {
  id                       String                     @id
  email                    String                     @unique
  passwordHash             String
  firstName                String?
  lastName                 String?
  role                     String                     @default("USER")
  isActive                 Boolean                    @default(true)
  isEmailVerified          Boolean                    @default(false)
  emailVerificationToken   String?
  emailVerificationExpires DateTime?
  passwordResetToken       String?
  passwordResetExpires     DateTime?
  lastLoginAt              DateTime?
  loginAttempts            Int                        @default(0)
  lockoutUntil             DateTime?
  twoFactorSecret          String?
  isTwoFactorEnabled       Boolean                    @default(false)
  twoFactorBackupCodes     String?
  lastPasswordChange       DateTime?                  @default(now())
  passwordChangeRequired   Boolean                    @default(false)
  securityQuestionHash     String?
  securityAnswerHash       String?
  preferredLanguage        String                     @default("en")
  timezone                 String                     @default("UTC")
  phoneNumber              String?
  isPhoneVerified          Boolean                    @default(false)
  phoneVerificationToken   String?
  phoneVerificationExpires DateTime?
  googleId                 String?                    @unique
  githubId                 String?                    @unique
  profileImageUrl          String?
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime
  discount_codes           discount_codes[]
  discount_usage           discount_usage[]
  login_history            login_history[]
  notification_preferences notification_preferences[]
  notifications            notifications[]
  promotion_usage          promotion_usage[]
  promotions               promotions[]
  security_audit_logs      security_audit_logs[]
  user_devices             user_devices[]
  user_sessions            user_sessions[]
  vehicles                 vehicles[]

  @@index([passwordResetToken])
  @@index([emailVerificationToken])
  @@index([githubId])
  @@index([googleId])
  @@index([loginAttempts, lockoutUntil])
  @@index([lastLoginAt])
  @@index([isActive])
  @@index([role])
  @@index([email])
}

model vehicles {
  id                                                  String             @id
  licensePlate                                        String             @unique
  vehicleType                                         String             @default("STANDARD")
  rateType                                            String             @default("HOURLY")
  status                                              String             @default("PARKED")
  spotId                                              String?
  currentSpotId                                       String?
  ownerId                                             String?
  ownerName                                           String?
  ownerEmail                                          String?
  ownerPhone                                          String?
  make                                                String?
  model                                               String?
  year                                                Int?
  color                                               String?
  checkInTime                                         DateTime           @default(now())
  checkOutTime                                        DateTime?
  isPaid                                              Boolean            @default(false)
  hourlyRate                                          Float              @default(5.0)
  totalAmount                                         Float              @default(0.0)
  amountPaid                                          Float              @default(0.0)
  notes                                               String?
  deletedAt                                           DateTime?
  createdAt                                           DateTime           @default(now())
  updatedAt                                           DateTime
  discount_usage                                      discount_usage[]
  parking_sessions                                    parking_sessions[]
  payments                                            payments[]
  pricing_history                                     pricing_history[]
  promotion_usage                                     promotion_usage[]
  users                                               users?             @relation(fields: [ownerId], references: [id])
  parking_spots_vehicles_currentSpotIdToparking_spots parking_spots?     @relation("vehicles_currentSpotIdToparking_spots", fields: [currentSpotId], references: [id])
  parking_spots_vehicles_spotIdToparking_spots        parking_spots?     @relation("vehicles_spotIdToparking_spots", fields: [spotId], references: [id])

  @@index([checkInTime, checkOutTime])
  @@index([ownerId, checkInTime])
  @@index([vehicleType, checkInTime])
  @@index([spotId, isPaid])
  @@index([createdAt])
  @@index([isPaid])
  @@index([checkInTime])
  @@index([vehicleType])
  @@index([ownerId])
  @@index([spotId])
  @@index([licensePlate])
}
