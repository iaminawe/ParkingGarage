{
  "root": true,
  "env": {
    "node": true,
    "es2022": true,
    "jest": true
  },
  "extends": [
    "eslint:recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint"
  ],
  "rules": {
    // TypeScript Rules
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_",
        "caughtErrorsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-var-requires": "error",
    "@typescript-eslint/explicit-function-return-type": "warn",
    "@typescript-eslint/explicit-module-boundary-types": "warn",
    "@typescript-eslint/no-inferrable-types": "warn",
    "@typescript-eslint/no-empty-function": "warn",

    // General JavaScript/TypeScript Rules
    "no-console": ["warn", { "allow": ["warn", "error"] }],
    "no-debugger": "error",
    "no-var": "error",
    "prefer-const": "error",
    "no-unused-vars": "off",
    "no-undef": "off",
    "eqeqeq": ["error", "always", { "null": "ignore" }],
    "no-eq-null": "error",
    "curly": ["error", "all"],
    "brace-style": ["error", "1tbs", { "allowSingleLine": true }],
    
    // Complexity Rules
    "complexity": ["warn", { "max": 15 }],
    "max-depth": ["warn", 5],
    "max-lines": ["warn", { "max": 500, "skipComments": true }],
    "max-lines-per-function": ["warn", { "max": 150, "skipComments": true }],
    "max-params": ["warn", 6],

    // Formatting Rules (Let Prettier handle most)
    "indent": "off",
    "linebreak-style": ["error", "unix"],
    "quotes": "off",
    "semi": "off"
  },
  "overrides": [
    {
      "files": ["*.test.ts", "*.spec.ts", "tests/**/*.ts"],
      "env": {
        "jest": true
      },
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "max-lines-per-function": "off",
        "complexity": "off"
      }
    },
    {
      "files": ["*.config.ts", "*.config.js", "jest.config.ts"],
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-var-requires": "off"
      }
    },
    {
      "files": ["src/generated/**/*.ts"],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/no-explicit-any": "off"
      }
    }
  ]
}